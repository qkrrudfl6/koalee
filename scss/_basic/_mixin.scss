// mixin.scss
//숨기는 영역 처리하기
@mixin hidden(){
  display: block; position: absolute; z-index:-10;
  width:0; height:0; overflow: hidden;
}


// framework============================================================

// 내부에 있는 text 숨기는 기능 처리하기

@mixin hiddenText(){
  display:block; width:0; height:0;
  position:absolute; z-index:-1; overflow:hidden;
}

@mixin link($w:100%,$h:100%){
  display:block; width:$w; height:$h;
  @content;
  &>span{@include hiddenText;}
}//@mixin link()
// @include link($w,$h);



// @mixin 이름($a){             }

@mixin indicator_type_01( $select, $myW,$zIn:500 ){

  // 하단에 존재하는 인디케이터 형태로, focus 처리되면 해당 버튼이 가로로 길게 늘어나는 형태
  // focus처리되면 해당버튼이 가로로 길게 늘어나는 형태
  // OPTION: 1. 인디케이터 버튼 하나의 크기 $myW로 설정,
  //         2. class선택자의 이름을 설정 $select => 선택자 지칭
  // 기본구조는: #select > ul > li > a 순서로 되어 있음.
  
  // *interpolation(보간) : 형태그대로 대입시키도록 처리하는 것

// ==============================================================================


// indicator
#{$select}{ $w:30px; $f:100%; position:absolute;z-index:$zIn; left:50%; bottom:$w;                     transform:translateX(-50%); width:auto; min-width:135px; height:$w;  background-color:$white; padding:5px; border-radius:$w;

          & > ul {width:$f; height:$f;
            & > li {float:left; width:auto; height:$w; margin-left:5px;
                    border-radius:$w;
                &:first-child{margin-left:0;}
                  }
          & a{@include link($w:$w,$h:$w);
              transition:all 300ms ease;
              background-color:$gray; border-radius:$w;
            &:hover{background-color:lighten($primary,30%);}
            &.action,&:focus{background-color:$primary;width:($w * 3);}
          
            &>span{@include hiddenText;}

          }
        }
      }//  .view_indicator



} // @mixin indicator_type_01
// ======================================
// 가로형 슬라이드 배너 스타일=1==================================

@mixin Horizontal_slide_banner($bannerName,$c,$w:100%,$h:100%,$view:false){

  // $bannerName (필수): 광고 슬라이드 배너를 처리하고 있는 영역의 이름(기본틀)
  // $c (필수): 가로형 슬라이드 배너의 개수(기본)
  // .guide (필수): $bannerName 자식으로 사용하는 가로 슬라이드 배너의 내용을 담을 긴 박스의 이름
  // .guide의 자식요소는 div로 설정되어 있음
  // $w : 기본틀의 가로 값 
  // $h : 기본틀의 세로 값 
  // $view : true이면 기본틀에서 넘치는 내용을 overflow: visible
  //         false면 기본틀에서 넘치는 내용을 overflow: hidden

  #{$bannerName} {$count:$c;  
    width:$w; height:$h;
    @if ($view == true){
    overflow:visible;
    } @else{
      overflow:hidden;
    }
    
  .guide{width:100%*$count; height:100%; background-color:$sample;
    &>div{float:left; width:(100% / $count); height:100%; background-repeat:no-repeat;
      padding:4rem; box-sizing:border-box;
      background-position:50% 50%; background-size:cover;
    // &:nth-of-type(1){background-color:$white;}
    // &:nth-of-type(2){background-color:darken($white,20%);}
    // &:nth-of-type(3){background-color:darken($white,40%);}
    // &:nth-of-type(4){background-color:darken($white,60%);}
    // -> js: for(let i =0; i<4; i++){}
    // -> js: for(최초의 임의 변수; 반복 횟수; 수행하기 위한 연산){}
 
    }// div(개별요소)
    @content;
    
    }
  }



}// @mixin horiazontal_slide_banner
// ==================================================================
$url:'../img/'; // @mixin 사용전 경로 설정할것
@mixin horizontal_banner_img($count,$imgName,$url:$url,$file:'jpg'){
     @for $i from 1 through $count {
      &:nth-of-type(#{$i}){
        $n : null;
        // background-color:darken($white,$i*20%);
        // background-image:url($url + 'mySlideImage_0#{$i}.jpg')
        @if ($i < 10) {
          $n : '0' +$i; //01, 02...09
          
        } @else {
          $n : $i;
        }
        background-image:url($url + $imgName + $n + '.' + $file);
      }
    }// @for
}

// ================================================================
/* 

@include horizontal_slide_banner('.my_banner',4){
  $url:'../img/';
  $imgNme:'mybanner_';
  $cont :4 ;
  @include horizontal_banner_img($count,$imgName,$url:$url,$file:'png');
  // 기타 div 및 하위 내용을 삽입
}

*/